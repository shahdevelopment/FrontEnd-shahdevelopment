version: '3'
networks:
  fastapi-vlan01:
    driver: bridge

services:
  server01:
    image: nodejs
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    hostname: server01
    # working_dir: /fastapi
    # volumes:
    #   - ./requirements.txt:/fastapi/requirements.txt
    #   - .:/fastapi:ro
    ports:
      - "3000:3000"
    #   - "${nginx_port}:${service_port}"
    # environment:
    #   - database_hostname=${database_hostname}
    #   - database_port=${database_port}
    #   - database_password=${database_password}
    #   - database_name=${database_name}
    #   - database_username=${database_username}
    #   - secret_key=${secret_key}
    #   - algorithm=${algorithm}
    #   - access_token_expire_minutes=${access_token_expire_minutes}
    #   - service_port=${service_port}
    #   # - net_name=${net_name}
    #   - service_host=${service_host}
    #   - nginx_port=${nginx_port}
    # env_file:
    #   - .env
    networks:
      - fastapi-vlan01
    # depends_on:
    #   - ${database_hostname}
    # command:
    #   - bash
    #   - -c
    #   - |
    #     apt update
    #     pip install --upgrade pip
    #     pip install virtualenv
    #     virtualenv .venv
    #     source .venv/bin/activate
    #     pip install -r requirements.txt
    #     export PORT=$${PORT:-8000}
    #     echo "Running on port $$PORT"
    #     uvicorn app.main:app --reload --host 0.0.0.0 --port $$PORT
    #   # $PORT is automatically set by docker when the container is started
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
      # resources:
      #   limits:
      #     cpus: '3'
      #     memory: 2048M
      #   reservations:
      #     cpus: '0.5'
      #     memory: 64M
      #placement:
      #constraints:
      #- node.labels.fastapi.server01 == true
      # backend:
      #   image: ${service_host}-node
      #   restart: always
      #   build:
      #     context: server/
      #     dockerfile: Dockerfile
      #   hostname: ${service_host}
      #   working_dir: /fastapi
      #   volumes:
      #     - ./requirements.txt:/fastapi/requirements.txt
      #     - .:/fastapi:ro
      #   ports:
      #     - "${service_port}"
      #     - "${nginx_port}:${service_port}"
      #   environment:
      #     - database_hostname=${database_hostname}
      #     - database_port=${database_port}
      #     - database_password=${database_password}
      #     - database_name=${database_name}
      #     - database_username=${database_username}
      #     - secret_key=${secret_key}
      #     - algorithm=${algorithm}
      #     - access_token_expire_minutes=${access_token_expire_minutes}
      #     - service_port=${service_port}
      #     # - net_name=${net_name}
      #     - service_host=${service_host}
      #     - nginx_port=${nginx_port}
      #   env_file:
      #     - .env
      #   networks:
      #     - fastapi-net
      #   depends_on:
      #     - ${database_hostname}
      #   command:
      #     - bash
      #     - -c
      #     - |
      #       apt update
      #       pip install --upgrade pip
      #       pip install virtualenv
      #       virtualenv .venv
      #       source .venv/bin/activate
      #       pip install -r requirements.txt
      #       export PORT=$${PORT:-8000}
      #       echo "Running on port $$PORT"
      #       uvicorn app.main:app --reload --host 0.0.0.0 --port $$PORT
      #     # $PORT is automatically set by docker when the container is started
      #   deploy:
      #     replicas: 3
      #     update_config:
      #       failure_action: rollback
      #     resources:
      #       limits:
      #         cpus: '3'
      #         memory: 2048M
      #       reservations:
      #         cpus: '0.5'
      #         memory: 64M
      #     #placement:
      #     #constraints:
      #     #- node.labels.fastapi.server01 == true
  nginx01:
    image: nginx:latest
      #sysctls:
      #   - net.ipv4.tcp_tw_reuse=1
      #   - net.ipv4.tcp_tw_recycle=1
    restart: always
      # hostname: ${nginx_host}
      # build:
      #   context: nginx/
      #   dockerfile: Dockerfile
    ports:
      - "9000:9000"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./config/fullchain.pem:/etc/letsencrypt/live/shahdevelopment.tech/fullchain.pem
      - ./config/privkey.pem:/etc/letsencrypt/live/shahdevelopment.tech/privkey.pem
        # environment:
        #   - service_host=${service_host}
        #   - net_name=${net_name}
        #   - api_worker=${api_worker}
        #   - nginx_port=${nginx_port}
        #   - nginx_host=${nginx_host}
        # env_file:
        #   - .env
        # depends_on:
        #   - ${service_host}
    networks:
      - fastapi-vlan01
        # healthcheck:
        #   test:
        #     [
        #       "CMD",
        #       "curl",
        #       "--fail",
        #       "http://localhost:${nginx_port}/health"
        #     ]
    # interval: 30s
    # timeout: 10s
    # retries: 3
    # deploy:
    # replicas: 1
